buildscript {
    dependencies {
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}

plugins {
    id "maven-publish"
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

version = '0.2.3'
group = 'xyz.brassgoggledcoders.transport'
archivesBaseName = 'transport'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
    }
    gametest {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.enabledGameTestNamespaces', 'transport'

            mods {
                transport {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.enabledGameTestNamespaces', 'transport'

            mods {
                transport {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.enabledGameTestNamespaces', 'transport'

            mods {
                transport {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', 'transport', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                transport {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name = "Registrate"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "JEI"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "TOP"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'

    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.19-1.1.5")
    jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "MC1.19-1.1.5") {
        jarJar.ranged(it, "[MC1.19-1.1.5,)")
    }


    runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.19.2-9.2.2-165.3")
    compileOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.19.2-9.2.2-165.3:api")

    compileOnly fg.deobf("mezz.jei:jei-1.19.2-forge-api:11.4.0.282")
    compileOnly fg.deobf("mezz.jei:jei-1.19.2-common-api:11.4.0.282")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19.2-forge:11.4.0.282")

    implementation fg.deobf("curse.maven:the-one-probe-245211:3965693")
}

jar {
    classifier = "nodep"
    manifest {
        attributes([
                "Specification-Title"     : "Transport",
                "Specification-Vendor"    : "Brass Goggled Coders",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Brass Goggled Coders",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

reobf {
    jarJar {}
}

tasks.jarJar.configure {
    classifier ''
}

jar.finalizedBy('reobfJar')
tasks.jarJar.finalizedBy('reobfJarJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            fg.component(it)
            jarJar.component(it)

            pom.withXml {
                asNode().dependencies.dependency.each { dep ->
                    assert dep.parent().remove(dep)
                }
            }
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.compilerArgs << "-Xmaxerrs" << "10000"
}